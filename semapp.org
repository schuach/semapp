#+TITLE: SEMAPP
#+NIKOLA_SLUG: semapp
#+AUTHOR: Stefan Schuh
#+EMAIL: stefan.schuh@uni-graz.at
#+DATE: 2019-12-09
#+DESCRIPTION: Hilfsprogramm, das das Setzen von Items auf SEMAPP beschleunigen soll
#+KEYWORDS: Semesterhandapparat Semapp
#+LANGUAGE: de
#+OPTIONS: tex:t todo:nil pri:nil tags:t texht:nil ':t ^:nil
#+OPTIONS: author:t creator:nil email:t date:t
#+LATEX_CLASS: koma-article
#+LATEX_CLASS_OPTIONS: [10pt, a4paper]
#+LATEX_HEADER: \usepackage[ngerman]{babel}
#+LATEX_HEADER: \usepackage[a4paper,margin=2.54cm]{geometry}
#+EXPORT_FILE_NAME: doc/doc.html

* Ausgangslage und Ziel
  Um Exemplare in den Semesterhandapparat zu stellen, werden diese auf den
  temporären Standort "SEMAP" gestellt. Das reine umstellen des Standorts ist
  eine repetitive Tätigkeit, die mit diesem Programm beschleunigt werden soll.
  
*** Userinterface
    Die Benutzerin soll es mit einem möglichst einfachen Interface zu tun haben.
    Der Workflow ist dahingehend optimiert, dass immer mehrere Bücher zu einem
    Semesterhandapparat in folge bearbeitet werden. Der Ablauf soll
    folgendermaßen sein:

    1. Die Benutzerin startet das Programm und bekommt eine Auswahl an
       Handapparaten. Dazu dient die Funktion [[choose_semapp]].
       1. Sollte der gewünschte Semesterhandapparat noch nicht verfügbar sein,
       kann die Benutzerin einen neuen Semapp anlegen ([[create_semapp]])
    2. Die Benutzerin gibt die laufende Nummer innerhalb des
       Semesterhandapparates ein (die an die temporäre Signatur angehängt wird)
       und scannt den Barcode.
    3. Nach dem Scannen erscheint erneut ein leeres Fenster für das nächste
       Exemplar in diesem Apparat.
    4. Wird kein Barcode gescannt oder auf "Cancel" geklickt, wird gefragt, ob
       ein neuer Apparat gewählt oder das Programm beendet werden soll.
       1. Soll ein neuer Apparat gewählt werden, beginnt die Verarbeitung
       wieder bei 1.
       2. Soll beendet werden, wird das Programm beendet.

* Script

*** Imports, APIs
***** Importe
      #+NAME: imports
      #+begin_src python
        import pickle
        from sys import argv, exit
        import urllib.parse

        import requests
        import easygui

        # config for api-key -- DO NOT PUT THIS FILE UNDER VERSION CONTROL!
        import config.config as config
      #+end_src
***** API-Vorlagen und -Konfiguration
      #+NAME: api
      #+begin_src python
        # get api-key from config
        api_key = config.keys["Sandbox"]

        # api-url-templates
        base_url = 'https://api-eu.hosted.exlibrisgroup.com/almaws/v1'
        barcode_api = base_url + "/items?item_barcode={barcode}"

        session = requests.Session()
        session.headers.update({
            "accept": "application/json",
            "authorization": f"apikey {api_key}",
        })
      #+end_src
***** Pfad zur Liste der Apparate
      Die Liste der Apparate wird mit =pickle= in ein Datei geschrieben. Der
      Pfad wir mehrmals gebraucht, daher als globale Variable.

      #+NAME: path-to-semapp-lst
      #+begin_src python
        semapps_path = "config/semapps.pickle"
      #+end_src

*** DONE create_semapp
    CLOSED: [2019-12-09 Mo 13:02]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:02]
    :END:
    #+NAME: create_semapp
    #+begin_src python
      def create_semapp(semapps):
          """Ask for new course reserve, return an updated list."""
          semapps = semapps
          title = "SEMAPP"
          msg = "Bitte Namen für den neuen Semesterhandapparat eingeben!"
          new_semapp = ""

          while not new_semapp:
              new_semapp = easygui.enterbox(msg, title).strip()

              # prüfen, ob der Name mit einem Großbuchstaben beginnt. Wenn nicht,
              # nächster Versuch
              if new_semapp[0].islower():
                  easygui.msgbox("Der Name des Semesterhandapparates muss mit einem Großbuchstaben beginnen.")
                  new_semapp = ""
                  continue

              if new_semapp:
                  if new_semapp in semapps:
                      # Wenn ein Apparat dieses Namens schon vorhanden ist, nichts tun
                      easygui.msgbox(f'Apparat "{new_semapp}" ist bereits vorhanden!')
                  else:
                      # Neuen Apparat zur Liste hinzufügen
                      confirm_msg = f'Neuen Semesterhandapparat "{new_semapp}" anlegen?'
                      confirmation = easygui.ccbox(confirm_msg, title)
                      if confirmation:
                          semapps.append(new_semapp)

          # pickle the new list
          pickle.dump(sorted(semapps), open(semapps_path, "wb"))
          return sorted(semapps)
    #+end_src

    #+RESULTS: create_semapp
    : None

*** DONE remove_semapp
    CLOSED: [2019-12-09 Mo 13:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:24]
    :END:
    #+NAME: remove_semapp
    #+begin_src python
      def remove_semapp(semapps):
          semapps = semapps
          title = "SEMAPP"
          msg = "Welchen Handapparat möchten Sie aus der Liste ENTFERNEN?"
          semapp_to_remove = easygui.choicebox(msg, title, semapps).strip()

          confirm_msg = f'Wollen Sie wirklich den Apparat "{semapp_to_remove}" aus der Liste ENTFERNEN?'
          confirmation = easygui.ccbox(confirm_msg, title)
          if confirmation:
              semapps.remove(semapp_to_remove)
              # pickle the new list
              pickle.dump(sorted(semapps), open(semapps_path, "wb"))

          return sorted(semapps)
    #+end_src

*** DONE choose_semapp
    CLOSED: [2019-12-09 Mo 13:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:24]
    :END:
    #+NAME: choose_semapp
    #+begin_src python
      def choose_semapp(semapps):
          semapps = semapps
          msg = "Bitte wählen Sie aus, zu welchen Semesterhandapparat Sie Exemplare hinzufügen möchten."
          title = "SEMAPP"

          valid_choice = False

          while valid_choice is False:
              choices = (["*** Neuen Semesterhandapparat anlegen ***"]
                        + semapps
                        + ["*** Einen Semesterhandapparat aus der Liste entfernen ***"])

              choice = easygui.choicebox(msg, title, choices)

              if choice == choices[0]:
                  semapps = create_semapp(semapps)
              elif choice == choices[-1]:
                  semapps = remove_semapp(semapps)
              else:
                  valid_choice = True

          return choice
    #+end_src

***** DONE Fix bug
      CLOSED: [2019-12-09 Mo 17:26]
      Wenn Semapps hinzugefügt oder gelöscht werden, geht es nicht weiter, wenn
      dann tatsächlich ein Semapp zum bearbeiten gewählt wird.

*** DONE get_user_input
    CLOSED: [2019-12-09 Mo 13:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:24]
    :END:
    #+NAME: get_user_input
    #+begin_src python
      def get_user_input(semapp):
          """Get Barcode and temporary call number from user."""

          msg = f'Exemplar zu Semapp "{semapp}" hinzufügen.'

          try:
              barcode = easygui.multenterbox(msg=msg, title="SEMAPP", fields=["Barcode"])[0]
          except:
              return None

          return barcode.strip()
    #+end_src

***** CANCELED Input checken
      CLOSED: [2019-12-19 Do 09:31]
      :LOGBOOK:
      - State "CANCELED"   from "TODO"       [2019-12-19 Do 09:31] \\
        Laufende Nummer wird nicht gewünscht.
      :END:
      Je nachdem, was gewünscht ist, könnte man noch checken, ob wirklich eine
      Nummer bei "Laufende Nummer" eingegeben wurde.
*** DONE move_to_semapp
    CLOSED: [2019-12-09 Mo 13:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:24]
    :END:
    #+NAME: move_to_semapp
    #+begin_src python
      def move_to_semapp(barcode, semapp):
          try:
              item = session.get(barcode_api.format(barcode=urllib.parse.quote_plus(barcode)))
              item.raise_for_status()
          except requests.exceptions.HTTPError as err:
              easygui.msgbox(msg=f"Ein Fehler ist aufgetreten. Stimmt der Barcode {barcode}?")
              exit(1)

          ij = item.json()
          if ij["holding_data"]["in_temp_location"]:
              easygui.msgbox(f"Exemplar {barcode} ist bereits an einem temporären Standort.")
              return

          # change the values in the item
          ij["holding_data"]["in_temp_location"] = True
          ij["holding_data"]["temp_library"] = {"value": "BHB", "desc": "Hauptbibliothek"}
          ij["holding_data"]["temp_location"] = {'value': 'SEMAP', 'desc': 'Semesterhandapparat'}
          ij["holding_data"]["temp_call_number_type"] = {'value': '8', 'desc': 'Other scheme'}
          perm_cn = ij["holding_data"]["call_number"]
          if perm_cn:
              ij["holding_data"]["temp_call_number"] = f"{semapp} ; {perm_cn}"
          else:
              ij["holding_data"]["temp_call_number"] = semapp

          # PUT the changed item
          try:
              put_res = session.put(ij["link"], json=ij)
              put_res.raise_for_status
          except requests.exceptions.HTTPError as err:
              easygui.msgbox(msg=f"Ein Fehler ist aufgetreten. Bitte kontrollieren sie das Item im System!")
              exit(1)
    #+end_src

*** DONE main
    CLOSED: [2019-12-09 Mo 13:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-12-09 Mo 13:24]
    :END:
    #+NAME: main
    #+begin_src python
      def main():

          # Liste der Semapps holen, oder wenn leer, anlegen
          try:
              semapps = pickle.load(open(semapps_path, "rb"))
          except FileNotFoundError:
              semapps = create_semapp([])

          # die Benutzerin nach dem Semapp fragen
          if len(semapps) > 0:
              semapp = choose_semapp(semapps)
          else:
              semapps = create_semapp(semapps)
              semapp = choose_semapp(semapps)


          # Main loop
          while True:
          # beenden, falls auf cancel geklickt wird
              if semapp is None:
                  exit(0)

              barcode = get_user_input(semapp)

              if barcode:
                  move_to_semapp(barcode, semapp)
              else:
                  # wenn auf cancel geklickt wird, wieder zurück zur Auswähl
                  semapp = choose_semapp(semapps)
    #+end_src

* Zusammensetzen aller Teile
  #+begin_src python -n :noweb yes :tangle semapp.py
    <<imports>>

    <<api>>

    <<path-to-semapp-lst>>

    <<create_semapp>>

    <<remove_semapp>>

    <<choose_semapp>>

    <<get_user_input>>

    <<move_to_semapp>>

    <<main>>

    if __name__ == "__main__":
        main()
  #+end_src

* SEMAPP -- Bedienungsanleitung
  :PROPERTIES:
  :EXPORT_FILE_NAME: doc/anleitung_semapp.pdf
  :EXPORT_OPTIONS: toc:t num:t
  :EXPORT_DATE: 2019-03-08
  :END:

*** Was tut dieses Programm und was nicht?
***** Was tut das Programm?
      Dieses Programm dient dazu, Exemplare mit weniger Handgriffen als in Alma
      auf einen temporären Standort zu setzen und eine temporäre Signatur
      einzutragen. Konkret handelt es sich um den Standort "SEMAP" an der
      Hauptbibliothek und in die Signatur kommt der Name der/des Leherenden.
      Dazu kommt nach " ; " noch die permanente Signatur. D. h. wenn es einen
      Semesterhandapparat für "Müller" gibt steht dort z. B. =Müller ; I 536262=.
***** Was tut das Programm *nicht*?
      Derzeit ist das alles "fest verkabelt". D. h. es funktioniert nur für diesen
      einen bestimmten Standort.

      Das Programm ist nicht dazu gedacht, Bücher wieder aus dem SEMAP zu
      entfernen. D. h. es setzt den temporären Standort, entfernt ihn aber nicht
      wieder.
*** Verwendung
    Zuerst: Bitte machen Sie sich eine Verknüpfung zu dem Programm, sodass Sie
    sich nicht immer durch das Netzlaufwerk klicken müssen.

    Das folgende Beispiel geht davon aus, dass der gewünschte
    Semesterhandapparat bereits in der Liste vorhanden ist. Für das Hinzufügen
    oder das Löschen eines Semesterhandapparates aus der Auswahlliste siehe die
    entsprechenden Abschnitte:

    - Hinzufügen: [[Einen Semesterhandapparat zur Liste hinzufügen]]
    - Entfernen: [[Einen Semesterhandapparat aus der Liste entfernen]]

***** Ablauf
      
      1. Starten Sie das Programm
      2. Wählen Sie aus der Liste den Semesterhandapparat aus, zu dem Sie
         Exemplare hinzufügen möchten:

         [[file:doc/pic/auswahl_semapp.png]]
      
         - Wenn Sie hier auf "Cancel" klicken, verlassen Sie das Programm.
      4. Es erscheint ein neues Fenster. Scannen Sie hier den Barcode ein.

         [[file:doc/pic/get_user_input.png]]

         Das Fenster schließt sich automatisch, das Exemplar wird im System
         umgesetzt.
      5. Das Eingabefenster öffnet sich erneut, um die Daten für das nächste
         Exemplar entegegenzunehmen. Wiederholen Sie Schritt 4 für jedes
         Exemplar, das zum selben Semesterhandapparat gehört.


         Wenn Sie hier auf "Cancel" klicken, kehren Sie zu Schritt 2 zurück, wo
         Sie einen anderen Semesterhandapparat auswählen, oder das Programm
         beenden können.

***** Anwendung des Programms im Erwerbungsprozess

      Das Programm kann auch verwendet werden, wenn ein Exemplar bestellt, aber
      noch nicht eingelangt ist. Dazu wird einfach der Dummy-Barcode (DC-...)
      des Exemplars in das Feld =Barcode= kopiert.

      *WICHTIG:* Wenn das Exemplar zum Zeitpunkt der Anmendung des Programms
      noch keine permanente Signatur hat, muss diese dann bei der Vergabe der
      Signatur in der temporären Signatur nachgetragen werden!

***** Einen Semesterhandapparat zur Liste hinzufügen
      Wenn der von Ihnen gewünschte Semesterhandapparat nicht in der
      Auswahlliste aufscheint, können Sie ihn hinzufügen. 

      - Wählen Sie dazu in der Liste die erste Zeile 
        =*** Neuen Semesterhandapparat anlegen ***= aus:

        [[file:doc/pic/auswahl_anlegen.png]]

      - Geben Sie den Namen des neuen Apparates ein. Dieser Name ist
        gleichzeitig die temporäre Signatur!

        [[file:doc/pic/create_semapp.png]]

      - Kontrollieren und bestätigen Sie im nächsten Schritt, ob Sie den Namen
        richtig geschrieben haben.

      - Der neue Name ist nun in der Auswahlliste vorhanden.

***** Einen Semesterhandapparat aus der Liste entfernen
      Wenn Sie einen Namen aus der Liste entfernen möchten, wählen Sie =***
      Einen Semesterhandapparat aus der Liste entfernen ***=. Wählen Sie im
      folgenden Fenster den Eintrag, den Sie entfernen möchten und bestätigen
      Sie Ihre Entscheidung.
